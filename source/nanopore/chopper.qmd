---
code-block-bg: true
code-block-border-left: "#31BAE9"
execute:
  eval: false
engine: knitr
bibliography: references.bib
---

<div style="text-align: justify">

## Chopper

### Introduction

[Chopper](https://github.com/wdecoster/chopper) is a tool for quality filtering of long read data. It is a Rust implementation of two other tools for long-read quality filtering, NanoFilt and NanoLyse, both originally written in Python. This tool, intended for long read sequencing such as PacBio or ONT, filters and trims a fastq file [@decoster2023].

Available on Crunchomics: Not by default

### Installation

It is easiest to install chopper with conda. If you do not have mamba (or conda) installed. Check out the installation instructions for [mamba](https://mamba.readthedocs.io/en/latest/mamba-installation.html#mamba-install) and [conda](https://crunchomics-documentation.readthedocs.io/en/latest/miniconda.html). Mamba is a newer version of conda and from experience faster but since its newer this might mean that not all software can yet be installed with mamba.

```{bash}
mamba create --name chopper -c bioconda chopper
```

### Usage

Required input:

-   FASTQ files

Output:

-   FASTQ files

Example usage:

```{bash}
chopper -q 10 \
        --headcrop 0 \
        --tailcrop 0   \
        -l 250 \
        --maxlength 3000  \
        --threads 1 
```

Useful arguments:

-   `--headcrop` Trim N nucleotides from the start of a read \[default: 0\]
-   `--maxlength` Sets a maximum read length \[default: 2147483647\]
-   `-l`, `--minlength` Sets a minimum read length \[default: 1\]
-   `-q`, `--quality` Sets a minimum Phred average quality score \[default: 0\]
-   `--tailcrop` Trim N nucleotides from the end of a read \[default: 0\]
-   `--threads` Number of parallel threads to use \[default: 4\]
-   `--contam` Fasta file with reference to check potential contaminants against \[default None\]}

### References