---
code-block-bg: true
code-block-border-left: "#31BAE9"
execute:
  eval: false
engine: knitr
---

## ITSx

### Introduction

"ITSx is an open source software utility to extract the highly variable ITS1 and ITS2 subregions from ITS sequences, which is commonly used as a molecular barcode for e.g. fungi." 

- [Website](https://microbiology.se/software/itsx/)
- [Manual](https://microbiology.se/publ/itsx_users_guide.pdf)

Available on Crunchomics: No


### Installation 

ITSx can be installed from scratch but below is the code needed to install the software with mamba (or conda if that is preferred). If you don't have mamba/conda installed find the correction version for your system here for [mamba](https://github.com/conda-forge/miniforge#mambaforge) and here for [conda](https://www.anaconda.com/download). Examples for setting up either mamba or conda are found in the code cell below.

If there is an issue with the mamba/conda installation, the software can also be downloaded with `wget https://microbiology.se/sw/ITSx_1.1.3.tar.gz`. After the download, decompress the folder and follow the information in the readme.txt. The download also comes with a test.fasta which can be used to test either installation.

Data for testing can also be found [here](https://github.com/ScienceParkStudyGroup/software_information/data/itsx/).


#### Install mamba/conda

```{bash}
#install conda (run only if not yet installed)
#adjust the file name based on your system needs
wget https://repo.anaconda.com/archive/Anaconda3-2023.07-2-Linux-x86_64.sh

bash Anaconda3-2023.07-2-Linux-x86_64.sh

#install mamba (run only if not yet installed)
#adjust the file name based on your system needs
wget https://github.com/conda-forge/miniforge/releases/latest/download/Mambaforge-Linux-x86_64.sh

bash Mambaforge-Linux-x86_64.sh
```

#### Option A (install ITSx in a separate environment)

```{bash}
mamba create -n fungi_its
mamba install -n fungi_its -c bioconda itsx
```

#### Option B (base ITSx install)

```{bash}
mamba install -c bioconda itsx
```



### Usage

- Required input: FASTA format (aligned or unaligned, DNA or RNA)

- Generated output:
  - one summary file of the entire run 
  - one more detailed table containing the positions in the respective sequences where the
ITS subregions were found
  - one "semi-graphical" representation of hits 
  - one FASTA file of all identified ITS sequences
  - one FASTA file for the ITS1 and ITS2 regions
  - if entries that did not contain any ITS region are found, a list of sequence IDs
representing those entries (optional)

- Useful arguments (not extensive, check manual for all arguments):
  - `--save_regions`: Get all regions of interest, not only ITS1/2
  - `-E {value}`: E-value cutoff (default 1e-5)
  - `-S {value}`: Domain score cutoff (default 0) 
  - `--cpu {value }`: Number of cpus to use (default 1)
  - `--multi_thread {T/F}`: Multi-thread the HMMER-search. On (T) by default if the number of CPUs/cores is larger than one (--cpu option > 1), else off (F)
  - `--preserve {T/F}`: If on, ITSx will preserve the sequence headers from the input file instead of replacing them with ITSx headers in the output. Off (F) by default.
  - `--only_full {T/F}`: If true, the output is limited to full-length ITS1 and ITS2 regions only. Off (F) by default.
  - `--minlen {value}` Minimum length the ITS regions must be to be outputted in
the concatenated file (see --concat above). Default is zero (0).


#### Example code

```{bash}
#activate the right environment (if using environment)
mamba deactivate
mamba activate fungi_its

#testrun (adjust path of test.fasta to where ever you downloaded the software)
mkdir testing
ITSx -i software/ITSx_1.1.3/test.fasta --save_regions all -o testing/ITS_test_v1

#sanity checking
grep -c ">" *fasta

#deactivate environment (if using environment)
mamba deactivate
```

Regions extracted from test file (notice how the full fasta ONLY contains sequences with all regions):

- ITS_test_v1.5_8S.fasta:50
- ITS_test_v1.ITS1.fasta:50
- ITS_test_v1.ITS2.fasta:50
- ITS_test_v1.LSU.fasta:32
- ITS_test_v1.SSU.fasta:31
- ITS_test_v1.full.fasta:19


